name: Floss
version: $SERVICE_TAG
description: This service uses FireEye Labs Obfuscated String Solver (FLOSS) to find obfuscated strings such as stacked strings.

# Regex defining the types of files the service accepts and rejects
accepts: executable/windows/.*
rejects: empty|metadata/.*|executable/windows/com|executable/windows/dos

# At which stage the service should run (one of FILTER, EXTRACT, CORE, SECONDARY, POST, REVIEW)
# NOTE: Stages are executed in the order defined in the list
stage: CORE
# Which category the service is part of (one of Antivirus, Dynamic Analysis, External, Extraction, Filtering, Internet Connected, Networking, Static Analysis)
category: Static Analysis

# Does the service require access to the file to perform its task
# If set to false, the service will only have access to the file metadata (e.g. Hashes, size, type, ...)
file_required: true
# Maximum execution time the service has before it's considered to be timed out
timeout: 300

# is the service enabled by default
enabled: true
privileged: true

config:
  max_size: 85000
  max_length: 5000
  st_max_size: 0
  enc_min_length: 7
  stack_min_length: 7

  deep_scan_max_size: 200000
  deep_scan_max_length: 1000000
  deep_scan_st_max: 100000
  deep_scan_enc_min: 7
  deep_scan_stack_min: 7

heuristics:
  - heur_id: 1
    name: Decoded string
    score: 10
    signature_score_map:
      decoded_ioc: 500
    filetype: '.*'
    description: Encoded string found

  - heur_id: 3
    name: Stacked string
    score: 0
    signature_score_map:
      stacked_ioc: 500
    filetype: '.*'
    description: Stacked string found

docker_config:
  image: ${REGISTRY}cccs/assemblyline-service-floss:$SERVICE_TAG
  cpu_cores: 2.0
  ram_mb: 2048
